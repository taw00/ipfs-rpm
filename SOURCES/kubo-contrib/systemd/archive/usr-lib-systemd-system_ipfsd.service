[Unit]
Description=ipfs daemon
After=syslog.target network.target
# Example of a preflight check

# Notes:
# Do not edit this file. Instead edit /etc/sysconfig/ipfsd
# ...unless you ever duplicate this service (run multiple instances on one
# machine). In that case you need to rename this and deal with the pid file
# changes
#
# Watch the daemon service actions in the syslog journal with:
# sudo journalctl -u ipfsd.service -f

[Service]
Type=forking
User=ipfs
Group=ipfs
EnvironmentFile=/etc/sysconfig/ipfsd

# Example of pre-flight check
# Check for config file and toss sensible message in the logs (journalctl -xe -u ipfsd.service)
#ExecStartPre=/etc/sysconfig/ipfsd-scripts/config-file-check.sh
ExecStartPre=-/usr/bin/echo "Starting."
ExecStartPre=-/etc/sysconfig/ipfsd-scripts/ipfsd-init.sh $JOURNAL_IDENTIFIER $AUTO_INIT $REPO $MOUNTPOINT_IPFS $MOUNTPOINT_IPFN
ExecStartPre=-/etc/sysconfig/ipfsd-scripts/write-to-journal.sh start $JOURNAL_IDENTIFIER "Service is starting."

# This example of an ExecStart shows how another example program passes values.
#ExecStart=/usr/sbin/exampledaemond -daemon -conf=${CONFIG_FILE} -datadir=${REPO} -pid=/run/ipfsd/ipfsd.pid $OPTIONS
ExecStart=IPFS_PATH=$REPO /usr/bin/ipfs daemon --mount --mount-ipfs=${MOUNTPOINT_IPFS} --mount-ipfn=${MOUNTPOINT_IPFN}
# Experimental: start then sleep
#ExecStartPost=/usr/bin/sleep $START_SLEEP_TIME
# Send email after start
ExecStartPost=-/etc/sysconfig/ipfsd-scripts/ipfsd.send-email.sh start $EMAIL_FROM $EMAIL_TO $IPFS_ALIAS
# Time that systemd gives a process to start before shooting it in the head
TimeoutStartSec=3m

# If ExecStop is not set, systemd sends a SIGTERM, which is "okay", just not ideal
# Really should execute a proper RPC or some such to cleaning shut the program down.
#ExecStop=/usr/bin/kill /run/ipfsd/ipfsd.pid
# Need to allow ipfsd to shutdown properly before taking additional actions.
ExecStopPost=-/usr/bin/echo "Shutting down. Sleeping for ${STOP_SLEEP_TIME} seconds"
ExecStopPost=-/etc/sysconfig/ipfsd-scripts/ipfsd.write-to-journal.sh stop $JOURNAL_IDENTIFIER "Service is shutting down. Sleeping for ${STOP_SLEEP_TIME} seconds"
ExecStopPost=-/usr/bin/sleep $STOP_SLEEP_TIME
# Send email at stop
ExecStopPost=-/etc/sysconfig/ipfsd-scripts/ipfsd.send-email.sh stop $EMAIL_FROM $EMAIL_TO $IPFS_ALIAS
# Time that systemd gives a process to stop before shooting it in the head
TimeoutStopSec=30

Restart=on-failure
# If something triggers an auto-restart, let's wait a bit before taking further action
# Note: This value is in addition to the stop sleep time
RestartSec=10

# In this interval span of time, we allow systemd to start ipfsd "burst" number
# of times. With ipfs we really only want one instance started, so... let's
# really limit this. But we want to give systemd some room to attempt to
# correct things. To be honest, I think the way things are configured between
# these settings and TimeoutStartSec, only one instance will be initiated.
StartLimitInterval=300
StartLimitBurst=3

PrivateTmp=true

[Install]
WantedBy=multi-user.target

# Really useful:
# * https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files
# * https://www.freedesktop.org/software/systemd/man/systemd.service.html
# * man systemd, man systemd.service, and man systemd.unit
